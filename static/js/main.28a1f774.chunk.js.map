{"version":3,"sources":["AcidRain.png","misae.png","Intro.js","Tools.js","Projects.js","Contacts.js","Modal.js","Toggle.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Intro","className","Tools","props","state","front","back","design","DeveloperTools","React","Component","Projects","href","src","AcidRain","misae","Contacts","Modal","emailHandler","inputvalue","document","querySelector","value","setState","email","bind","this","isOpen","close","onClick","type","placeholder","Toggle","isdisplay","Nav","openModal","isModalOpen","closeModal","clickToggle","isToggleOpen","isDisplay","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.28a1f774.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/AcidRain.274de0a3.png\";","module.exports = __webpack_public_path__ + \"static/media/misae.a392e0c1.png\";","import React from 'react';\nimport './Intro.css';\n\nfunction Intro () {\n    return (\n        <div>\n            <div className=\"Imac\">\n                <div className=\"Desc\">\n                    <div className=\"subDesc\">Hello I'm</div>\n                    <div className=\"name\">Ohyeon <br />Kwon</div> <br />\n                    <div className=\"boldDesc\">I am Full-stack developer</div><br />\n                    <div className=\"subDesc\">\n                        I like finding out what's lacking of service and thinking about how to improve it<br />\n                        I keep blogging on my dev blog, don't forget how to solve problems and communicate skills <br />\n                        My final goal is to work as a web developer in the United States\n                    </div>\n                </div>\n            </div>\n            <div className=\"scroll\"> Do you want to know about me? <br />let's scroll up! </div>\n\n        </div>\n    );\n}\n\nexport default Intro;","import React from 'react';\nimport './Tools.css';\n\nclass Tools extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          front: ['JavaScript', 'React', 'Redux', 'HTML', 'CSS'],\n          back: ['Nodejs', 'Express', 'Django', 'Mysql', 'Sequelize', 'Postgresql'],\n          design: ['photoshop', 'illustrator'],\n          DeveloperTools: ['Git', 'NPM', 'AWS']\n        }\n      }\n    render() {\n      return (\n      <div className=\"tools\">\n        <div className=\"tool\">\n          <div className=\"part\">Front<br/></div>\n          JavaScript <br />\n          React <br />\n          Redux <br />\n          HTML <br />\n          CSS <br />\n        </div>\n        <div className=\"tool\">\n        <div className=\"part\">Back<br/></div>\n          Nodejs <br />\n          Express <br />\n          Django <br />\n          MySQL <br />\n          Sequelize <br />\n          PostgreSQL <br />\n        </div>\n        <div className=\"tool\">\n        <div className=\"part\">Design<br/></div>\n          PhotoShop <br />\n          Illustrator <br />\n        </div>\n        <div className=\"tool\">\n        <div className=\"part\">Developer Tools<br/></div>\n          Git <br />\n          NPM <br />\n          AWS <br />\n        </div>\n      </div>\n      \n      );\n    }\n}\n\nexport default Tools;","import React from 'react';\nimport './Projects.css';\nimport AcidRain from './AcidRain.png';\nimport misae from './misae.png';\n\nfunction Projects () {\n    return (\n    <div>\n        <div className=\"Projects\"> \n            <div className=\"left\">\n                <span className=\"name\"> 산성비 </span>\n                <div className=\"project\">\n                    <a href=\"https://github.com/oyeon-kwon/AcidRain\">\n                        <img className=\"AcidRain\" src={AcidRain} />\n                    </a>\n                    <div className=\"projectDesc\">\n                        <div className=\"projectIntro\">\n                            코딩을 시작하는 우리에게는 타이핑마저 어렵다!<br />\n                            추억의 타자연습 산성비 게임이 개발자를 위한 타이핑 연습 게임으로 재탄생했습니다.<br />\n                            산성비 게임을 하다보면 낯설기만 했던 코드에 어느새 익숙해져있는 당신을 발견할거예요!\n                        </div>\n                        <div className=\"resumebox\">\n                            <div className=\"resume\">Express 서버 구축</div>\n                            <div className=\"resume\">DB schema 작성</div>\n                            <div className=\"resume\">유저가 선택한 스테이지의 컨텐츠 정보 전송</div>\n                            <div className=\"resume\">기록된 모든 게임의 결과값 전송</div>\n                            <div className=\"resume\">현재 진행한 게임 결과를 playlog 테이블에 저장</div>\n                            <div className=\"resume\">마이페이지: 닉네임 수정 기능</div>\n                            <div className=\"resume\">랭킹페이지: 전체 유저의 게임 결과 리스트 확인</div>\n                            <div className=\"resume\">게임 실행 시 BGM 삽입</div>\n                        </div>\n                        \n                    </div>\n                </div>\n\n            </div>\n            <div className=\"right\">\n                <div className=\"name\"> 미세톡톡 </div>\n                <div className=\"project\">\n                    <div className=\"projectDesc\">\n                        <div className=\"projectIntro\">\n                            미세톡톡은 미세먼지 농도와 날씨를 알려주는 앱입니다. <br />\n                            앱 내에서 발생하는 데일리 미션을 통해 포인트를 획득할 수 있습니다. <br />\n                            적립한 포인트로는 기프티콘을 구매하거나 블록체인 기반의 HUM토큰으로 전환할 수 있습니다.\n                        </div>\n                        <div className=\"resumebox\">\n                            <div className=\"resume\">만료된 기상청 API 업데이트</div>\n                            <div className=\"resume\">날씨 API 추가 및 fallback 구현</div>\n                            <div className=\"resume\">fallback 발생 시 슬랙 알림 설정</div>\n                            <div className=\"resume\">API 함수 분리, 코드 리팩토링</div>\n                            <div className=\"resume\">Admin 페이지 검색 기능 추가</div>\n                        </div>\n                    </div>\n                    <a href=\"https://play.google.com/store/apps/details?id=com.finedustclient&hl=ko\">\n                        <img className=\"misae\" src={misae} /> \n                    </a>\n                </div>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default Projects;","import React from 'react';\nimport './Contacts.css';\n\nfunction Contacts () {\n    return (\n    <div>\n        <div className=\"contacts\">\n            <a href=\"https://o-yeon.tistory.com/\" className=\"contact\">blog</a>\n            <a href=\"https://github.com/oyeon-kwon\" className=\"contact\">github</a>\n            <a href=\"https://www.instagram.com/o_yeon/\" className=\"contact\">instagram</a>\n            <a href=\"https://www.youtube.com/channel/UCS2Bdts66P2urp2b7t3Wi9Q\" className=\"contact\">youtube</a>\n        </div>\n    </div>\n    );\n}\n\n\nexport default Contacts;","import React from 'react';\nimport './Modal.css';\n\nclass Modal extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          email: \"\"\n      }\n    \n    this.emailHandler = this.emailHandler.bind(this);\n    }\n\n    emailHandler = () => {\n        const inputvalue = document.querySelector(\".inputEmail\").value;\n        this.setState({\n            email: inputvalue\n        })\n    }\n\n    render () {\n        const { isOpen, close } = this.props;\n\n        return (\n            <div>{\n            isOpen ? (\n                <div className=\"Modal\">\n                <div className=\"ModalBox\">\n                    <span className=\"close\" onClick={close}>&times;</span>\n                    <div className=\"desc\">이메일을 입력해주시면 이력서를 보내드립니다.</div>\n                    <input type=\"email\" className=\"inputEmail\" placeholder=\"please enter your email\"></input>\n                    <button onClick={this.emailHandler} value={this.state}>send</button>\n                </div>\n                </div>\n            ) : null\n            }</div>\n        )\n    }\n}\nexport default Modal;","import React from 'react';\nimport './Toggle.css';\n\nclass Toggle extends React.Component {\n\n    constructor(props){\n        super(props)\n    }\n    \n    render () {\n        const { isdisplay } = this.props;\n\n    return (\n        <div>{\n            isdisplay ? (<div>\n                    <br/><br/><br/><br/>\n                    <div className=\"toggle\">\n                    <div className=\"career\">Career</div>\n                    <br/>\n                    <div className=\"period\">also I worked in</div>\n                    <br/>\n                    <div className=\"company\">\n                        internship in GOODOC\n                    </div>\n                    <div className=\"period\">\n                        2015.04~07\n                    </div>\n                    <br/>\n                    <div className=\"company\">\n                        founded CAFEGALLE app\n                    </div>\n                    <div className=\"period\">\n                        2016.01~2017.01\n                    </div>\n                    <br/>\n                    <div className=\"company\">\n                        manager in UNIQLO\n                    </div>\n                    <div className=\"period\">\n                        2018.03~2019.11\n                    </div>\n                    <br/>\n                    <div className=\"company\">\n                        CSE in CODESTATES\n                    </div>\n                    <div className=\"period\">\n                        2020.09~2021.02\n                    </div>\n                    </div>\n            </div>) : null\n        }</div>\n    )\n    }\n}\n\nexport default Toggle;","import React from 'react';\nimport './Nav.css';\nimport Modal from './Modal';\nimport Toggle from './Toggle';\n\nclass Nav extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isModalOpen: false,\n        isToggleOpen: false\n      }\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.clickToggle = this.clickToggle.bind(this);\n    }\n\n    openModal = () => {\n        this.setState({ isModalOpen: true });\n      };\n    \n    closeModal = () => {\n    this.setState({ isModalOpen: false });\n    };\n\n    clickToggle = () => {\n        this.setState({ isToggleOpen: !this.state.isToggleOpen })\n    }\n\n    render () {\n        return (\n            <div>\n                <div className=\"navBox\">\n                    <div className=\"email\" onClick={this.openModal}>email</div>\n                    <Modal isOpen={this.state.isModalOpen} close={this.closeModal}/>\n                    <div className=\"before\" onClick={this.clickToggle} isDisplay={this.state.isToggleOpen}>What I did before</div> \n                    <Toggle isdisplay={this.state.isToggleOpen}></Toggle>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Nav;","import React from 'react';\nimport './App.css';\n// import { Controller, Scene } from 'react-scrollmagic';\nimport Intro from './Intro';\nimport Tools from './Tools';\nimport Projects from './Projects';\nimport Contacts from './Contacts';\nimport Nav from './Nav';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    }\n  }\n  render() {\n\n    return (\n      <div className=\"box\">\n        {/* 소개 페이지 */}\n        <div className=\"box\">\n          <Nav />\n        </div>\n        <div className=\"box\">\n          <Intro />\n        </div>\n        {/* 사용 스택 */}\n        <div className=\"box\">\n          <Tools />\n        </div>\n        {/* 프로젝트 */}\n        <div className=\"box\">\n          <Projects />\n        </div>\n        {/* 연락 */}\n        <div className=\"box\">\n          <Contacts />\n        </div>\n      </div>\n    )\n\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}